{"version":3,"sources":["src/app/service/category/category.service.ts","src/app/service/evaluations/evaluations.service.ts","src/app/service/lecture/lecture.service.ts","src/app/service/outcome/outcome.service.ts","src/app/service/skill/skill.service.ts","src/app/service/student/student.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Category} from '../../interface/category';\r\nimport {Skill} from '../../interface/skill';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllCategory(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(API_URL + '/categories');\r\n  }\r\n\r\n  createCategory(category: Category): Observable<Category> {\r\n    return this.http.post<Category>(API_URL + '/categories', category);\r\n  }\r\n\r\n  getCategory(id: number): Observable<Category> {\r\n    return this.http.get<Category>(API_URL + `/categories/${id}`);\r\n  }\r\n\r\n  updateCategory(id: number, category: Category): Observable<Category> {\r\n    return this.http.put<Category>(API_URL + `/categories/${id}`, category);\r\n  }\r\n\r\n  deleteCategory(id: number): Observable<Category> {\r\n    return this.http.delete<Category>(API_URL + `/categories/${id}`);\r\n  }\r\n\r\n  findByCategoryName(name: string): Observable<Category> {\r\n    return this.http.get<Category>(API_URL + '/categories/name?name=' + name);\r\n  }\r\n\r\n  getAllSkillByCategory(id: number): Observable<Skill[]> {\r\n    return this.http.get<Skill[]>(API_URL + `/categories/${id}/skills`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Evaluations} from '../../interface/evaluations';\r\nimport {Student} from '../../interface/student';\r\nimport {EvaluationsDetail} from '../../interface/evaluations-detail';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EvaluationsService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllEvaluations(): Observable<Evaluations[]> {\r\n    return this.http.get<Evaluations[]>(API_URL + '/evaluations');\r\n  }\r\n\r\n  createDescription(evaluations: Evaluations): Observable<Evaluations> {\r\n    return this.http.post<Evaluations>(API_URL + '/evaluations', evaluations);\r\n  }\r\n\r\n  getEvaluations(id: number): Observable<Evaluations> {\r\n    return this.http.get<Evaluations>(API_URL + `/evaluations/${id}`);\r\n  }\r\n\r\n  updateEvaluations(id: number, evaluations: Evaluations): Observable<Evaluations> {\r\n    return this.http.put<Evaluations>(API_URL + `/evaluations/${id}`, evaluations);\r\n  }\r\n\r\n  deleteEvaluations(id: number): Observable<Evaluations> {\r\n    return this.http.delete<Evaluations>(API_URL + `/evaluations/${id}`);\r\n  }\r\n\r\n  getAllEvaluationsByStudent(id: number): Observable<Student[]> {\r\n    return this.http.get<Student[]>(API_URL + `/students/${id}/evaluations`);\r\n  }\r\n\r\n  getAllEvaluationsDetailByEvaluationAndSkill(id: number, skillId: number): Observable<EvaluationsDetail> {\r\n    return this.http.get<EvaluationsDetail>(API_URL + `/evaluations/${id}/skills/${skillId}/evaluation-details`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Lecture} from '../../interface/lecture';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LectureService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllLecture(): Observable<Lecture[]> {\r\n    return this.http.get<Lecture[]>(API_URL + '/lectures');\r\n  }\r\n\r\n  createLecture(lecture: Lecture): Observable<Lecture> {\r\n    return this.http.post<Lecture>(API_URL + '/lectures', lecture);\r\n  }\r\n\r\n  getLecture(id: number): Observable<Lecture> {\r\n    return this.http.get<Lecture>(API_URL + `/lectures/${id}`)\r\n  }\r\n\r\n  updateLecture(id: number, lecture: Lecture): Observable<Lecture> {\r\n    return this.http.put<Lecture>(API_URL + `/lectures/${id}`, lecture)\r\n  }\r\n\r\n  deleteLecture(id: number): Observable<Lecture> {\r\n    return this.http.delete<Lecture>(API_URL + `/lectures/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Outcome} from '../../interface/outcome';\r\nimport {Category} from '../../interface/category';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OutcomeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllOutcome(): Observable<Outcome[]> {\r\n    return this.http.get<Outcome[]>(API_URL + '/outcomes');\r\n  }\r\n\r\n  createOutcome(outcome: Outcome): Observable<Outcome> {\r\n    return this.http.post<Outcome>(API_URL + '/outcomes', outcome);\r\n  }\r\n\r\n  getOutcome(id: number): Observable<Outcome> {\r\n    return this.http.get<Outcome>(API_URL + `/outcomes/${id}`);\r\n  }\r\n\r\n  updateOutcome(id: number, outcome: Outcome): Observable<Outcome> {\r\n    return this.http.put<Outcome>(API_URL + `/outcomes/${id}`, outcome);\r\n  }\r\n\r\n  deleteOutcome(id: number): Observable<Outcome> {\r\n    return this.http.delete<Outcome>(API_URL + `/outcomes/${id}`);\r\n  }\r\n\r\n  findByTitle(title: string): Observable<Outcome> {\r\n    return this.http.get<Outcome>(API_URL + '/outcomes/name?title=' + title);\r\n  }\r\n\r\n  getAllCategoryByOutcome(id: number): Observable<Category[]> {\r\n    return this.http.get<Category[]>(API_URL + `/outcomes/${id}/categories`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Skill} from '../../interface/skill';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllSkill(): Observable<Skill[]> {\r\n    return this.http.get<Skill[]>(API_URL + '/skills');\r\n  }\r\n\r\n  createSkill(skill: Skill): Observable<Skill> {\r\n    return this.http.post<Skill>(API_URL + '/skills', skill);\r\n  }\r\n\r\n  getSkill(id: number): Observable<Skill> {\r\n    return this.http.get<Skill>(API_URL + `/skills/${id}`)\r\n  }\r\n\r\n  updateSkill(id: number, skill: Skill): Observable<Skill> {\r\n    return this.http.put<Skill>(API_URL + `/skills/${id}`, skill)\r\n  }\r\n\r\n  deleteSkill(id: number): Observable<Skill> {\r\n    return this.http.delete<Skill>(API_URL + `/skills/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Student} from '../../interface/student';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllStudent(): Observable<Student[]> {\r\n    return this.http.get<Student[]>(API_URL + '/students');\r\n  }\r\n\r\n  createStudent(student: Student): Observable<Student> {\r\n    return this.http.post<Student>(API_URL + '/students', student);\r\n  }\r\n\r\n  getStudent(id: number): Observable<Student> {\r\n    return this.http.get<Student>(API_URL + `/students/${id}`);\r\n  }\r\n\r\n  updateStudent(id: number, student: Student): Observable<Student> {\r\n    return this.http.put<Student>(API_URL + `/students/${id}`, student);\r\n  }\r\n\r\n  deleteStudent(id: number): Observable<Student> {\r\n    return this.http.delete<Student>(API_URL + `/students/${id}`);\r\n  }\r\n\r\n  getAllStudentByClasses(id: number): Observable<Student[]> {\r\n    return this.http.get<Student[]>(API_URL + `/classes/${id}/students`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}